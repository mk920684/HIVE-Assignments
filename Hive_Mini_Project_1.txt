Q1. Create a schema based on the given dataset

create table agent_logging_report (
sl_no int,
Agent string,
Date date,
login_time string,
logout_time string,
duration string)
row format delimited
fields terminated by ','
tblproperties ("skip.header.line.count" = "1");
);

create table agent_performance(
sl_no int,
Date date,
Agent_name string,
total_chats int,
average_response_time string,
average_resolution string,
average_rating float,
total_feedback int
)
row format delimited
fields terminated by ','
tblproperties ("skip.header.line.count" = "1");
);


3. List of all agents' names.

select distinct agent from agent_logging_report ;
 
4. Find out agent average rating.

select avg(average_rating),agent_name from agent_performance group by agent_name limit 5;


5. Total working days for each agents 

select count(date),agent from agent_logging_report group by agent limit 5;


6. Total query that each agent have taken 

select sum(total_chats),agent_name from agent_performance group by agent_name limit 5;

7. Total Feedback that each agent have received 

select sum(total_feedback),agent_name from agent_performance group by agent_name limit 5;


8. Agent name who have average rating between 3.5 to 4 

Select agent_name from agent_performance where average_rating BETWEEN 3.5 AND 4 limit 5;


9. Agent name who have rating less than 3.5 

Select agent_name from agent_performance where average_rating < 3.5 limit 5;

10. Agent name who have rating more than 4.5 

Select agent_name from agent_performance where average_rating > 4.5 limit 5; 

11. How many feedback agents have received more than 4.5 average

select avg(total_feedback), agent_name from agent_performance group by agent_name  having avg(total_feedback)>4.5;


12. average weekly response time for each agent

select s.agent_name,avg(col1[0]*3600+col1[1]*60+col1[2])/3600  from(
select agent_name,split(average_response_time,':') as col1  from agent_performance)s group by s.agent_name;
 
13. average weekly resolution time for each agents 

select s.agent_name,avg(col1[0]*3600+col1[1]*60+col1[2])/3600  from(
select agent_name,split(average_resolution,':') as col1  from agent_performance)s group by s.agent_name;


14. Find the number of chat on which they have received a feedback 

Select agent_name,sum(total_chats),total_feedback from agent_performance where total_feedback>0 group by agent_name,total_feedback;



15. Total contribution hour for each and every agents weekly basis 

select s.agent,sum(col1[0]*3600+col1[1]*60+col1[2])/3600,s.weekly  from(
select agent,split(duration,':') as col1 ,weekofyear(Date) as weekly from agent_logging_report)s group by s.agent,s.weekly limit 2;



16. Perform inner join, left join and right join based on the agent column and after joining the table export that data into your local system.

INNER JOIN:
Select alr.agent,alr.date,ap.total_chats,ap.total_feedback from hive_assignment2.agent_logging_report alr join hive_assignment2.agent_performance ap on alr.agent = ap.agent_name limit 5;

LEFT JOIN:
Select alr.agent,alr.date,ap.total_chats,ap.total_feedback from hive_assignment2.agent_logging_report alr left join hive_assignment2.agent_performance ap on alr.agent = ap.agent_name limit 5;

RIGHT JOIN:
Select alr.agent,alr.date,ap.total_chats,ap.total_feedback from hive_assignment2.agent_logging_report alr right join hive_assignment2.agent_performance ap on alr.agent = ap.agent_name limit 5;

Export:

$  hive -e 'Select alr.agent,alr.date,ap.total_chats,ap.total_feedback from hive_assignment2.agent_logging_report alr join hive_assignment2.agent_performance ap on alr.agent = ap.agent_name limit 5' > /home/cloudera/hive_Assignment2/inner.join.csv;

$  hive -e 'Select alr.agent,alr.date,ap.total_chats,ap.total_feedback from hive_assignment2.agent_logging_report alr left join hive_assignment2.agent_performance ap on alr.agent = ap.agent_name limit 5' > /home/cloudera/hive_Assignment2/left.join.csv;

$  hive -e 'Select alr.agent,alr.date,ap.total_chats,ap.total_feedback from hive_assignment2.agent_logging_report alr right join hive_assignment2.agent_performance ap on alr.agent = ap.agent_name limit 5' > /home/cloudera/hive_Assignment2/right.join.csv;


17. Perform partitioning on top of the agent column and then on top of that perform bucketing for each partitioning.

Create table ALR_partition_Bucket
(
sr_no int,
Date date,
Login_time string,
Logout_time string,
Duration string
)partitioned by (Agent string)
CLUSTERED BY (Date) sorted by (Date) INTO 4 BUCKETS
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ',';


set hive.exec.dynamic.partition=true;
set hive.exec.dynamic.partition.mode=nonstrict; 

hive> insert into table ALR_partition_Bucket partition(Agent) select sl_no,Date,Login_time,Logout_time,Duration,Agent from agent_logging_report;


Create table AP_partition_Bucket
(
sr_no int,
Date date,
Total_chat string,
Average_Response_Time string,
Average_Resolution_Time string,
Average_Rating float,
Total_Feedback int
)partitioned by (agent_name string)
CLUSTERED BY (Date) sorted by (Date) INTO 8 BUCKETS
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ',';

insert into table AP_partition_Bucket partition(agent_name) select sl_no,Date,Total_chats, Average_Response_Time, Average_Resolution,Average_Rating,Total_Feedback,Agent_name from Agent_performance;
